apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion SysConfig.compileSdkVersion
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion SysConfig.minSdkVersion
        targetSdkVersion SysConfig.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        javaCompileOptions {
            annotationProcessorOptions {
                // 如果用到 room，可指定 room.schemaLocation 属性，指定生成的包含 sql 的 json 文件路径
                arguments += ["room.schemaLocation": "$projectDir/build/schemas".toString()]
                // 增量编译
                arguments += ["room.incremental": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        preDexLibraries true
        maxProcessCount 8
        jumboMode = true
    }

    // 开启 DataBinding 和 ViewBinding
    buildFeatures{
        dataBinding = true
        viewBinding = true
    }

    // 支持 Java 8
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "${JavaVersion.VERSION_1_8}"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //原生框架的官方支持库
    api Deps.material
    api Deps.constraintLayout
    api Deps.vectordrawable
    api Deps.natigationFragment
    api Deps.natigationUi
    api Deps.lifecycleExtensions
    api Deps.natigationFragmentKTX
    api Deps.natigationUiKTX

    // 以下是框架没有封装过的库，只是将具体的地址放到了 MVVMArchitecture/dependencies.gradle 文件中，需要的话，自行引入
    api Deps.bindingAdapter
    api Deps.natigationFragmentKTX
    api Deps.bindingAdapter
    api Deps.bindingAdapter
    api Deps.bindingAdapterKTX
    api Deps.bindingAdapterRv
    api Deps.bindingAdapterVp2

    // 源码方式引用框架
    api project(path: ':MVVMArchitecture')
    // 如果你用到 room，需要声明注解处理器，否则无法使用的。
    kapt Deps.roomCompiler

}